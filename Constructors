Java constructors are used to initialize the objects.

***If programmer not writing constructor then java compiler will add default constructor.Every class in java contains constrcutor including abstract class but not in interface.
Every variable present in the interface in public static and final hence constructor is not applicable to interface. 

Prototype of default constructor:
1.It is always no arg constructor
2.Access modifier of default constructor will be same as class(applicable only public, default, Protected and private)
3.Default constructor is a no arg call to super class constructor.

Rules for constructor:
1.Class name and constructor name should be same
2.There is no return type for constructor and if we declare with return type then compiler will consider it as method
3.only public, default, protected and private access modifiers are allowed for constrcutors.(if we use other than these then we get compile time error)

***Compiler checks Constructor code and if its not proper then compiler will add this() or super() 

Example:
  public class Student {
	String name;
	int rollno;
	
	//constructor
	Student(String name, int rollno){
		this.name=name;
		this.rollno=rollno;
	}
	public static void main(String[] args) {
		Student s1=new Student("Tk",101);
		System.out.println(s1.name +".."+ s1.rollno);
	}
}

Constructor overloading
----------------------------
1.We can write n number of constructor with different type of args

*** Overriding and inheritance concepts are not applicable to constructors
*** Recursive constructor gives compile time error where as in recursive method gives run time error
*** If parent constructor throws any exception then child constructor must throw the same exception.
